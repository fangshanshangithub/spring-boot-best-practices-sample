# 应用程序配置
spring.application.name=spring-boot-with-jpa-sample
spring.application.admin.enabled=true

# 内嵌容器配置
server.port=8080
server.address=127.0.0.1
server.servlet.context-path=/

# Spring Boot Data JPA 配置
# 支持三种方式启动Repository
# 三个可选值 default|deferred|lazy
spring.data.jpa.repositories.bootstrap-mode=default
# 初始化数据库表和字段 针对内嵌数据库 H2, HSQL, or Derby
# Hibernate自带的hibernate.hbm2ddl.auto整合Spring Data JPA 后可以使用这种
#create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
#none：什么都不做
# hibernate.hbm2ddl.auto 在应用启动的时候框架会自动去数据库中创建对应的表。
spring.jpa.hibernate.ddl-auto=create-drop
#
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
# 如果您正在运行Web应用程序，则Spring Boot默认情况下会注册OpenEntityManagerInViewInterceptor以应用“在视图中打开EntityManager”模式，以允许在Web视图中进行延迟加载。
# 如果您不希望出现这种情况，则应在application.properties中将spring.jpa.open-in-view设置为false。
spring.jpa.open-in-view=true

# 针对H2 数据库 开发环境使用true,生产环境应该设置为false
# 是否使用web控制台
spring.h2.console.enabled=true
# 控制台上下文
spring.h2.console.path=/h2-console