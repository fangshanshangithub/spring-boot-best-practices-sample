# 内嵌容器配置
# 配置应用程序的访问端口
server.port=8080
#配置应用程序的上下文
server.servlet.context-path=/


# 配置Kafka集群IP地址,多个IP以逗号隔开
spring.kafka.bootstrap-servers=192.168.10.137:9092
#配置约定的订阅主题
com.xingyun.kafka.topic-name=topic.demo

# 生产者客户端配置参数
#必要参数
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#其他可选参数类型
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# 可选参数 
# Kafka 生产者客户端Id,默认为"" 不设置为producer-1,producer-2
spring.kafka.producer.client-id=kafka.producer.client.id.demo
#重新尝试次数
spring.kafka.producer.retries=0

#消费者客户端配置参数
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
#设置消费者客户端Id
spring.kafka.consumer.client-id=kafka.client.id.1
# 消费者群组ID，发布-订阅模式，即如果一个生产者，多个消费者都要消费，那么需要定义自己的群组，同一群组内的消费者只有一个能消费到消息
spring.kafka.consumer.group-id=kafka.consumer.group.id.1
# 是否自动提交 关闭自动提交位移, 在消息被完整处理之后再手动提交位移.
spring.kafka.consumer.enable-auto-commit=false
#auto.commit.interval.ms=1000 如何设置为自动提交（enable.auto.commit=true），这里设置自动提交周期
spring.kafka.consumer.auto-commit-interval=1000
#   自动将偏移量置为最早的
# 可选值 earliest|latest|none
#earliest 
#       当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费 
#latest 
#       当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据 
#none 
#  topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
spring.kafka.consumer.auto-offset-reset=earliest


# Spring Boot 日志
# SpringBoot默认使用的的日志框架是slf4j + Logback
# Logback 没有 FATAL 级别，对应着 ERROR
# 日志级别从低到高
# TRACE < DEBUG < INFO < WARN < ERROR
## 默认配置INFO、WARN、ERROR级别的日志输出到控制台
logging.level.root=info
##配置自己的应用程序日志级别,com.xingyun 是程序的根包名称
logging.level.com.xingyun=debug
##设置其他全部的日志等级
logging.level.*=warn
## 打印调试
#debug=false
## 增强打印调试
#trace=false
##日志记录到文件 两者选其一，都配置的话只有logging.file 生效
#logging.path=/opt/applog
logging.file=/opt/applog/spring.log
## 设置日志文件最大大小,默认为10MB 当日志文件到达10Mb时会使用压缩包保存
logging.file.max-size=10MB
## 保留最近多少天的日志,超过7天的日志就会自动删除
logging.file.max-history=7

